import { useState, useRef } from 'react';
import { useFeedbackStore } from '../../../shared/store/feedbackStore';
import './DataManager.css';

const DataManager = () => {
  const { exportData, importData, clearAllData } = useFeedbackStore();
  const [importStatus, setImportStatus] = useState('');
  const fileInputRef = useRef(null);

  const handleExport = () => {
    const data = exportData();
    const blob = new Blob([data], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `feedback-data-${new Date().toISOString().split('T')[0]}.json`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const handleImportClick = () => {
    fileInputRef.current?.click();
  };

  const handleFileChange = (e) => {
    const file = e.target.files?.[0];
    if (!file) return;

    const reader = new FileReader();
    reader.onload = (event) => {
      try {
        const jsonData = event.target?.result;
        const success = importData(jsonData);
        
        if (success) {
          setImportStatus('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!');
        } else {
          setImportStatus('‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞');
        }
      } catch (error) {
        setImportStatus('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞');
      }
      
      // –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => setImportStatus(''), 3000);
    };
    
    reader.readAsText(file);
    e.target.value = ''; // –°–±—Ä–æ—Å–∏—Ç—å input
  };

  const handleClearData = () => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
      clearAllData();
      setImportStatus('üóëÔ∏è –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');
      setTimeout(() => setImportStatus(''), 3000);
    }
  };

  return (
    <div className="data-manager">
      <h3>üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏</h3>
      
      <div className="data-actions">
        <button 
          className="btn-export"
          onClick={handleExport}
          title="–°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON"
        >
          üì• –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
        </button>
        
        <button 
          className="btn-import"
          onClick={handleImportClick}
          title="–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON —Ñ–∞–π–ª–∞"
        >
          üì§ –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
        </button>
        
        <button 
          className="btn-clear"
          onClick={handleClearData}
          title="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ"
        >
          üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
        </button>
      </div>

      <input
        ref={fileInputRef}
        type="file"
        accept=".json"
        onChange={handleFileChange}
        style={{ display: 'none' }}
      />

      {importStatus && (
        <div className="import-status">
          {importStatus}
        </div>
      )}
    </div>
  );
};

export default DataManager; 