name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6368:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx
    
    - name: Set environment variables
      run: |
        echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
        echo "POSTGRES_USER=postgres" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=postgres" >> $GITHUB_ENV
        echo "POSTGRES_DB=postgres" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6368/0" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
    
    - name: Run tests
      run: |
        pytest tests/ -v
    
    - name: Test application startup
      run: |
        uvicorn src.main:app --host 0.0.0.0 --port 8000 &
        sleep 10
        curl -f http://localhost:8000/ || exit 1
        curl -f http://localhost:8000/health || exit 1
        curl -f http://localhost:8000/cache/status || exit 1
        pkill -f uvicorn

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t task-manager:${{ github.sha }} .
    
    - name: Test Docker container
      run: |
        # Start Redis for testing
        docker run -d --name redis-test -p 6368:6379 redis:7-alpine
        
        # Start the application
        docker run -d -p 8000:8000 --name test-app \
          -e REDIS_URL=redis://host.docker.internal:6368/0 \
          task-manager:${{ github.sha }}
        
        sleep 15
        curl -f http://localhost:8000/ || exit 1
        curl -f http://localhost:8000/health || exit 1
        
        # Cleanup
        docker stop test-app redis-test
        docker rm test-app redis-test

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan with bandit
      run: |
        pip install bandit
        bandit -r src/ -f json -o bandit-report.json || true
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-results
        path: bandit-report.json 